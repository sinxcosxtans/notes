C51 COMPILER V9.01   I2C                                                                   05/22/2020 18:26:27 PAGE 1   


C51 COMPILER V9.01, COMPILATION OF MODULE I2C
OBJECT MODULE PLACED IN i2c.OBJ
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE i2c.c BROWSE DEBUG OBJECTEXTEND

line level    source

   1          #include"i2c.h"
   2          
   3          /*******************************************************************************
   4          * 函数名         : Delay10us()
   5          * 函数功能                 : 延时10us
   6          * 输入           : 无
   7          * 输出           : 无
   8          *******************************************************************************/
   9          
  10          
  11          void Delay10us()
  12          {
  13   1              uchar a,b;
  14   1              for(b=1;b>0;b--)
  15   1              {
  16   2              for(a=2;a>0;a--);
  17   2              }
  18   1      }
  19          
  20          void delay(uchar i)
  21          {
  22   1          while(i--);
  23   1      }
  24          /*******************************************************************************
  25          * 函数名         : I2cStart()
  26          * 函数功能               : 起始信号：在SCL时钟信号在高电平期间SDA信号产生一个下降沿
  27          * 输入           : 无
  28          * 输出           : 无
  29          * 备注           : 起始之后SDA和SCL都为0
  30          *******************************************************************************/
  31          
  32          void I2cStart()
  33          {
  34   1              SDA=1;
  35   1              Delay10us();
  36   1              SCL=1;
  37   1              Delay10us();//建立时间是SDA保持时间>4.7us
  38   1              SDA=0;
  39   1              Delay10us();//保持时间是>4us
  40   1              SCL=0;                  
  41   1              Delay10us();            
  42   1      }
  43          /*******************************************************************************
  44          * 函数名         : I2cStop()
  45          * 函数功能               : 终止信号：在SCL时钟信号高电平期间SDA信号产生一个上升沿
  46          * 输入           : 无
  47          * 输出           : 无
  48          * 备注           : 结束之后保持SDA和SCL都为1；表示总线空闲
  49          *******************************************************************************/
  50          
  51          void I2cStop()
  52          {
  53   1              SDA=0;
  54   1              Delay10us();
  55   1              SCL=1;
C51 COMPILER V9.01   I2C                                                                   05/22/2020 18:26:27 PAGE 2   

  56   1              Delay10us();//建立时间大于4.7us
  57   1              SDA=1;
  58   1              Delay10us();            
  59   1      }
  60          /*******************************************************************************
  61          * 函数名         : I2cSendByte(unsigned char dat)
  62          * 函数功能               : 通过I2C发送一个字节。在SCL时钟信号高电平期间，保持发送信号SDA保持稳定
  63          * 输入           : num
  64          * 输出           : 0或1。发送成功返回1，发送失败返回0
  65          * 备注           : 发送完一个字节SCL=0,SDA=1
  66          *******************************************************************************/
  67          
  68          uchar I2cSendByte(uchar dat)
  69          {
  70   1          uchar a=0,b=0;//最大255，一个机器周期为1us，最大延时255us。         
  71   1              for(a=0;a<8;a++)//要发送8位，从最高位开始
  72   1              {
  73   2                      SDA=dat>>7;      //起始信号之后SCL=0，所以可以直接改变SDA信号
  74   2                      dat=dat<<1;
  75   2                      Delay10us();
  76   2                      SCL=1;
  77   2                      Delay10us();//建立时间>4.7us
  78   2                      SCL=0;
  79   2                      Delay10us();//时间大于4us               
  80   2              }
  81   1              SDA=1;
  82   1              Delay10us();
  83   1              SCL=1;
  84   1              while(SDA)//等待应答，也就是等待从设备把SDA拉低
  85   1              {
  86   2                      b++;
  87   2                      if(b>200)        //如果超过2000us没有应答发送失败，或者为非应答，表示接收结束
  88   2                      {
  89   3                              SCL=0;
  90   3                              Delay10us();
  91   3                              return 0;
  92   3                      }
  93   2              }
  94   1              SCL=0;
  95   1              Delay10us();
  96   1              return 1;               
  97   1      }
  98          
  99          
 100          
 101          /*******************************************************************************
 102          * 函数名         : void oled_Write_cmd(unsigned char addr,unsigned char cmd)
 103          * 函数功能                 : 往oled写命令，与lcd1602相似
 104          * 输入           : 无
 105          * 输出           : 无
 106          *******************************************************************************/
 107          
 108          void oled_Write_cmd(uchar cmd)
 109          {
 110   1              I2cStart();
 111   1              I2cSendByte(0x78);//发送写器件地址
 112   1              I2cSendByte(0x00);//发送要写入内存地址
 113   1              I2cSendByte(cmd);       //写入命令
 114   1              I2cStop();
 115   1      }
 116          
 117          /*******************************************************************************
C51 COMPILER V9.01   I2C                                                                   05/22/2020 18:26:27 PAGE 3   

 118          * 函数名         : void oled_Write_data(unsigned char dat)
 119          * 函数功能                 : 往oled写数据，与lcd1602相似
 120          * 输入           : 无
 121          * 输出           : 无
 122          *******************************************************************************/
 123          
 124          void oled_Write_data(uchar dat)
 125          {
 126   1              I2cStart();
 127   1              I2cSendByte(0x78);//发送写器件地址
 128   1              I2cSendByte(0x40);//发送要写入内存地址
 129   1              I2cSendByte(dat);       //写入数据
 130   1              I2cStop();
 131   1      }
 132          
 133          void oled_clear()  //页寻址下的oled清屏函数
 134          {       uchar i,j;
 135   1           
 136   1              oled_Write_cmd(0x20);
 137   1              oled_Write_cmd(0x02);
 138   1          for(i=0;i<8;i++)
 139   1              {
 140   2                      oled_Write_cmd(0xb0+i);
 141   2                      oled_Write_cmd(0x00);
 142   2                      oled_Write_cmd(0x10);
 143   2                      for(j=0;j<128;j++)
 144   2                      {
 145   3                         oled_Write_data(0x00); 
 146   3                      }
 147   2      
 148   2              }       
 149   1      }
 150          
 151          
 152          
 153          void oled_initial()//oled初始化函数
 154          {
 155   1          delay(500);
 156   1                               
 157   1              oled_Write_cmd(0xae);//--turn off oled panel 关闭显示
 158   1          oled_Write_cmd(0x00);//---set low column address设置起始列的低四位 0x0x
 159   1          oled_Write_cmd(0x10);//---set high column address设置起始列的高四位0x1x
 160   1          oled_Write_cmd(0x40);//--set start line address  Set Mapping RAM Display Start Line (0x00~0x3F)
 161   1          oled_Write_cmd(0x81);//--set contrast control register设置对比度
 162   1          oled_Write_cmd(0xff); // Set SEG Output Current Brightness对比度为oxff
 163   1          oled_Write_cmd(0xa1);//--Set SEG/Column Mapping     0xa0左右反置 0xa1正常
 164   1          oled_Write_cmd(0xc8);//Set COM/Row Scan Direction   0xc0上下反置 0xc8正常
 165   1          oled_Write_cmd(0xa6);//--set normal display
 166   1          oled_Write_cmd(0xa8);//--set multiplex ratio(1 to 64)
 167   1          oled_Write_cmd(0x3f);//--1/64 duty
 168   1          oled_Write_cmd(0xd3);//-set display offset    Shift Mapping RAM Counter (0x00~0x3F)
 169   1          oled_Write_cmd(0x00);//-not offset
 170   1          oled_Write_cmd(0xd5);//--set display clock divide ratio/oscillator frequency
 171   1          oled_Write_cmd(0x80);//--set divide ratio, Set Clock as 100 Frames/Sec
 172   1          oled_Write_cmd(0xd9);//--set pre-charge period
 173   1          oled_Write_cmd(0xf1);//Set Pre-Charge as 15 Clocks & Discharge as 1 Clock
 174   1          oled_Write_cmd(0xda);//--set com pins hardware configuration
 175   1          oled_Write_cmd(0x12);
 176   1          oled_Write_cmd(0xdb);//--set vcomh
 177   1          oled_Write_cmd(0x40);//Set VCOM Deselect Level
 178   1          oled_Write_cmd(0x20);//-Set Page Addressing Mode (0x00/0x01/0x02)设置地址模式
 179   1                                                      //水平寻址，垂直寻址，页寻址
C51 COMPILER V9.01   I2C                                                                   05/22/2020 18:26:27 PAGE 4   

 180   1          oled_Write_cmd(0x02);//     地址模式为页寻址
 181   1          oled_Write_cmd(0x8d);//--set Charge Pump enable/disable
 182   1          oled_Write_cmd(0x14);//--set(0x10) disable
 183   1          oled_Write_cmd(0xa4);// Disable Entire Display On (0xa4/0xa5)
 184   1          oled_Write_cmd(0xa6);// Disable Inverse Display On (0xa6/a7) 
 185   1          oled_Write_cmd(0xaf);//--turn on oled panel开启显示
 186   1      
 187   1              delay(100);
 188   1              oled_clear();//清屏
 189   1      }
 190          
 191          void oled_put_char_16x16(uchar x,uchar y,uchar t)/*设置显示坐标函数,t为0时，字符为8x16
 192                                                              t为1时，字符为16x16*/                 
 193          {        
 194   1           oled_Write_cmd(0x20);
 195   1               oled_Write_cmd(0x00);//设置地址模式为水平选址
 196   1           //set page
 197   1           oled_Write_cmd(0x22);
 198   1               oled_Write_cmd(y*2);
 199   1               oled_Write_cmd(0x01+y*2);
 200   1      
 201   1               //set colum
 202   1           oled_Write_cmd(0x21);
 203   1               oled_Write_cmd((0x08+0x08*t)*x);
 204   1               oled_Write_cmd((0x08+0x08*t)*x+(0x07+0x08*t));
 205   1      
 206   1               
 207   1      
 208   1      
 209   1      
 210   1      
 211   1      }
 212          
 213          
 214          
 215          
 216          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    418    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----       3
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
